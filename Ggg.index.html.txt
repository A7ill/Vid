<!DOCTYPE html>
<html lang="ar">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>لعبة الثعبان</title>
  <style>
    /* CSS */
    body {
      margin: 0;
      font-family: Arial, sans-serif;
      text-align: center;
      background: linear-gradient(135deg, #1e3c72, #2a5298);
      color: white;
    }

    #menu, #game-over {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      height: 100vh;
    }

    button {
      padding: 10px 20px;
      margin: 10px;
      font-size: 18px;
      border: none;
      border-radius: 5px;
      background-color: #4caf50;
      color: white;
      cursor: pointer;
      transition: background-color 0.3s;
    }

    button:hover {
      background-color: #45a049;
    }

    #game-container canvas {
      border: 4px solid white;
      border-radius: 10px;
      margin: 20px auto;
      display: block;
    }
  </style>
</head>
<body>
  <!-- HTML -->
  <div id="menu">
    <h1>لعبة الثعبان</h1>
    <button id="start-game">ابدأ اللعبة</button>
    <button id="select-map">اختيار الخريطة</button>
  </div>

  <div id="game-container" style="display: none;">
    <canvas></canvas>
  </div>

  <div id="game-over" style="display: none;">
    <h2>انتهت اللعبة!</h2>
    <p>النقاط: <span id="score"></span></p>
    <button id="restart-game">إعادة المحاولة</button>
  </div>

  <script>
    // JavaScript
    const menu = document.getElementById("menu");
    const gameContainer = document.getElementById("game-container");
    const gameOverScreen = document.getElementById("game-over");
    const canvas = document.querySelector("canvas");
    const ctx = canvas.getContext("2d");
    canvas.width = 400;
    canvas.height = 400;

    let gridSize = 20;
    let snake = [{ x: 200, y: 200 }];
    let direction = "RIGHT";
    let nextDirection = "RIGHT";
    let food = {};
    let score = 0;
    let speed = 100;
    let running = false;

    const maps = [
      { background: "#222", snakeColor: "green", foodColor: "red" },
      { background: "#333", snakeColor: "blue", foodColor: "yellow" },
      { background: "#444", snakeColor: "purple", foodColor: "orange" },
    ];
    let selectedMap = maps[0];

    let touchStartX = 0;
    let touchStartY = 0;

    document.addEventListener("keydown", (e) => {
      if (e.key === "ArrowUp" && direction !== "DOWN") nextDirection = "UP";
      if (e.key === "ArrowDown" && direction !== "UP") nextDirection = "DOWN";
      if (e.key === "ArrowLeft" && direction !== "RIGHT") nextDirection = "LEFT";
      if (e.key === "ArrowRight" && direction !== "LEFT") nextDirection = "RIGHT";
    });

    canvas.addEventListener("touchstart", (e) => {
      touchStartX = e.touches[0].clientX;
      touchStartY = e.touches[0].clientY;
    });

    canvas.addEventListener("touchmove", (e) => {
      const touchEndX = e.touches[0].clientX;
      const touchEndY = e.touches[0].clientY;
      const diffX = touchEndX - touchStartX;
      const diffY = touchEndY - touchStartY;

      if (Math.abs(diffX) > Math.abs(diffY)) {
        if (diffX > 0 && direction !== "LEFT") nextDirection = "RIGHT";
        if (diffX < 0 && direction !== "RIGHT") nextDirection = "LEFT";
      } else {
        if (diffY > 0 && direction !== "UP") nextDirection = "DOWN";
        if (diffY < 0 && direction !== "DOWN") nextDirection = "UP";
      }

      touchStartX = touchEndX;
      touchStartY = touchEndY;
    });

    document.getElementById("start-game").addEventListener("click", startGame);
    document.getElementById("restart-game").addEventListener("click", restartGame);

    document.getElementById("select-map").addEventListener("click", () => {
      selectedMap = maps[(maps.indexOf(selectedMap) + 1) % maps.length];
      alert("تم اختيار خريطة جديدة!");
    });

    function createFood() {
      food.x = Math.floor(Math.random() * (canvas.width / gridSize)) * gridSize;
      food.y = Math.floor(Math.random() * (canvas.height / gridSize)) * gridSize;
    }

    function update() {
      const head = { ...snake[0] };

      direction = nextDirection;

      if (direction === "UP") head.y -= gridSize;
      if (direction === "DOWN") head.y += gridSize;
      if (direction === "LEFT") head.x -= gridSize;
      if (direction === "RIGHT") head.x += gridSize;

      if (head.x < 0) head.x = canvas.width - gridSize;
      if (head.x >= canvas.width) head.x = 0;
      if (head.y < 0) head.y = canvas.height - gridSize;
      if (head.y >= canvas.height) head.y = 0;

      snake.unshift(head);

      if (head.x === food.x && head.y === food.y) {
        score++;
        createFood();
        speed = Math.max(50, speed - 2);
      } else {
        snake.pop();
      }

      if (snake.slice(1).some((segment) => segment.x === head.x && segment.y === head.y)) {
        endGame();
      }
    }

    function draw() {
      ctx.fillStyle = selectedMap.background;
      ctx.fillRect(0, 0, canvas.width, canvas.height);

      snake.forEach((segment, index) => {
        ctx.fillStyle = index === 0 ? selectedMap.snakeColor : "lightgreen";
        ctx.fillRect(segment.x, segment.y, gridSize, gridSize);

        if (index === 0) {
          ctx.fillStyle = "white";
          ctx.beginPath();
          ctx.arc(segment.x + 5, segment.y + 5, 3, 0, Math.PI * 2);
          ctx.arc(segment.x + 15, segment.y + 5, 3, 0, Math.PI * 2);
          ctx.fill();
        }
      });

      ctx.fillStyle = selectedMap.foodColor;
      ctx.fillRect(food.x, food.y, gridSize, gridSize);

      ctx.fillStyle = "white";
      ctx.font = "16px Arial";
      ctx.fillText("Score: " + score, 10, 20);
    }

    function gameLoop() {
      if (running) {
        update();
        draw();
        setTimeout(gameLoop, speed);
      }
    }

    function startGame() {
      menu.style.display = "none";
      gameContainer.style.display = "block";
      resetGame();
      running = true;
      gameLoop();
    }

    function restartGame() {
      gameOverScreen.style.display = "none";
      gameContainer.style.display = "block";
      resetGame();
      running = true;
      gameLoop();
    }

    function resetGame() {
      snake = [{ x: 200, y: 200 }];
      direction = "RIGHT";
      nextDirection = "RIGHT";
      score = 0;
      speed = 100;
      createFood();
    }

    function endGame() {
      running = false;
      scoreElement.textContent = score;
      gameOverScreen.style.display = "flex";
      gameContainer.style.display = "none";
    }

    createFood();
  </script>
</body>
</html>